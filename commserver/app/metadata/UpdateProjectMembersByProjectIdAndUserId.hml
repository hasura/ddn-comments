---
kind: ObjectType
version: v1
definition:
  name: UpdateProjectMembersByProjectIdAndUserIdUpdateColumns
  description: Update the columns of the 'project_members' collection
  fields:
    - name: createdAt
      type: UpdateColumnProjectMembersCreatedAt
      description: Update the 'created_at' column in the 'project_members' collection.
    - name: id
      type: UpdateColumnProjectMembersId
      description: Update the 'id' column in the 'project_members' collection.
    - name: projectId
      type: UpdateColumnProjectMembersProjectId
      description: Update the 'project_id' column in the 'project_members' collection.
    - name: role
      type: UpdateColumnProjectMembersRole
      description: Update the 'role' column in the 'project_members' collection.
    - name: userId
      type: UpdateColumnProjectMembersUserId
      description: Update the 'user_id' column in the 'project_members' collection.
  graphql:
    typeName: UpdateProjectMembersByProjectIdAndUserIdUpdateColumns
    inputTypeName: UpdateProjectMembersByProjectIdAndUserIdUpdateColumnsInput
  dataConnectorTypeMapping:
    - dataConnectorName: my_connector
      dataConnectorObjectType: update_project_members_by_project_id_and_user_id_update_columns
      fieldMapping:
        createdAt:
          column:
            name: created_at
        id:
          column:
            name: id
        projectId:
          column:
            name: project_id
        role:
          column:
            name: role
        userId:
          column:
            name: user_id

---
kind: TypePermissions
version: v1
definition:
  typeName: UpdateProjectMembersByProjectIdAndUserIdUpdateColumns
  permissions:
    - role: admin
      output:
        allowedFields:
          - createdAt
          - id
          - projectId
          - role
          - userId

---
kind: ObjectType
version: v1
definition:
  name: UpdateProjectMembersByProjectIdAndUserIdResponse
  description: Responses from the
    'update_project_members_by_project_id_and_user_id' procedure
  fields:
    - name: affectedRows
      type: Int4!
      description: The number of rows affected by the mutation
    - name: returning
      type: "[ProjectMembers!]!"
      description: Data from rows affected by the mutation
  graphql:
    typeName: UpdateProjectMembersByProjectIdAndUserIdResponse
    inputTypeName: UpdateProjectMembersByProjectIdAndUserIdResponseInput
  dataConnectorTypeMapping:
    - dataConnectorName: my_connector
      dataConnectorObjectType: update_project_members_by_project_id_and_user_id_response
      fieldMapping:
        affectedRows:
          column:
            name: affected_rows
        returning:
          column:
            name: returning

---
kind: TypePermissions
version: v1
definition:
  typeName: UpdateProjectMembersByProjectIdAndUserIdResponse
  permissions:
    - role: admin
      output:
        allowedFields:
          - affectedRows
          - returning

---
kind: Command
version: v1
definition:
  name: UpdateProjectMembersByProjectIdAndUserId
  outputType: UpdateProjectMembersByProjectIdAndUserIdResponse!
  arguments:
    - name: keyProjectId
      type: Uuid!
    - name: keyUserId
      type: Uuid!
    - name: postCheck
      type: ProjectMembersBoolExp
      description: Update permission post-condition predicate over the
        'project_members' collection
    - name: preCheck
      type: ProjectMembersBoolExp
      description: Update permission pre-condition predicate over the
        'project_members' collection
    - name: updateColumns
      type: UpdateProjectMembersByProjectIdAndUserIdUpdateColumns!
  source:
    dataConnectorName: my_connector
    dataConnectorCommand:
      procedure: update_project_members_by_project_id_and_user_id
    argumentMapping:
      keyProjectId: key_project_id
      keyUserId: key_user_id
      postCheck: post_check
      preCheck: pre_check
      updateColumns: update_columns
  graphql:
    rootFieldName: updateProjectMembersByProjectIdAndUserId
    rootFieldKind: Mutation
  description: Update any row on the 'project_members' collection using the
    'project_id' and 'user_id' keys

---
kind: CommandPermissions
version: v1
definition:
  commandName: UpdateProjectMembersByProjectIdAndUserId
  permissions:
    - role: admin
      allowExecution: true

